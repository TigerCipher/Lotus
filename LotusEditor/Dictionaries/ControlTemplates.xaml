<ResourceDictionary x:Class="LotusEditor.Dictionaries.ControlTemplates"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:LotusEditor.Dictionaries"
                    xmlns:util="clr-namespace:LotusEditor.Utility.Controls"
                    >
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
        <Setter Property="Foreground" Value="{StaticResource Editor.FontColorBrush}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush4}"/>
        <Setter Property="SelectionBrush" Value="white"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0, 2"/>
    </Style>
    <Style TargetType="{x:Type TextBox}" x:Key="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
        <EventSetter Event="KeyDown" Handler="OnTextBox_KeyDown"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyleRename" BasedOn="{StaticResource TextBoxStyle}">
        <EventSetter Event="KeyDown" Handler="TextBoxRename_OnKeyDown"/>
        <EventSetter Event="LostFocus" Handler="TextBoxRename_OnFocusLost"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="LightTextBlockStyle">
        <Setter Property="Foreground" Value="{StaticResource Editor.FontColorBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="SimpleButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush3}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush5}"/>
        <Setter Property="Foreground" Value="{StaticResource Editor.FontColorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Editor.Window.GrayBrush5}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{StaticResource Editor.FontColorBrush}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{StaticResource Editor.Window.GrayColor5}" Offset="0"/>
                    <GradientStop Color="{StaticResource Editor.Window.GrayColor4}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{StaticResource Editor.Window.GrayColor6}" Offset="0"/>
                    <GradientStop Color="{StaticResource Editor.Window.GrayColor2}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource Editor.FontColorBrush}"/>
        <Setter Property="BorderThickness" Value="0,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,3"/>
        <!-- <Setter Property="IsDefault" Value="True"/> -->
        <!-- <Setter Property="IsEnabled" Value="False"/> -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0, 1" x:Key="Button.Selected.OpacityBrush">
                            <GradientStop Color="White" Offset="0"/>
                            <GradientStop Color="#88ffffff" Offset="1"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0, 1" x:Key="Button.Selected.OpacityBrush.Reverse">
                            <GradientStop Color="White" Offset="1"/>
                            <GradientStop Color="#88ffffff" Offset="0"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0, 1" x:Key="Button.Disabled.BackgroundBrush">
                            <GradientStop Color="{StaticResource Editor.Window.GrayColor4}" Offset="0"/>
                            <GradientStop Color="{StaticResource Editor.Window.GrayColor3}" Offset="1"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0, 1" x:Key="Button.Disabled.BorderBrush">
                            <GradientStop Color="{StaticResource Editor.Window.GrayColor5}" Offset="0"/>
                            <GradientStop Color="{StaticResource Editor.Window.GrayColor1}" Offset="1"/>
                        </LinearGradientBrush>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true"/>
                        <Border x:Name="borderSelection" SnapsToDevicePixels="True" CornerRadius="3" BorderThickness="0" BorderBrush="Transparent"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <!-- <Setter Property="TextElement.Foreground" Value="Black" TargetName="contentPresenter"/> -->
                            <Setter Property="Background" TargetName="borderSelection" Value="{StaticResource Editor.Selected.BackgroundColorBrush}"></Setter>
                            <Setter Property="OpacityMask" TargetName="borderSelection" Value="{StaticResource Button.Selected.OpacityBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" Value="White" TargetName="contentPresenter"/>
                            <Setter Property="Background" TargetName="borderSelection" Value="{StaticResource Editor.Selected.BackgroundColorBrush}"></Setter>
                            <Setter Property="OpacityMask" TargetName="borderSelection" Value="{StaticResource Button.Selected.OpacityBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="TextElement.Foreground" Value="White" TargetName="contentPresenter"/>
                            <Setter Property="Background" TargetName="borderSelection" Value="{StaticResource Editor.Selected.BackgroundColorBrush}"></Setter>
                            <Setter Property="OpacityMask" TargetName="borderSelection" Value="{StaticResource Button.Selected.OpacityBrush.Reverse}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource Editor.Disabled.FontColorBrush}" TargetName="contentPresenter"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.BackgroundBrush}"></Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LotusWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Selected.BackgroundColorBrush}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush1}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                              GlassFrameThickness="0" CaptionHeight="20" NonClientFrameEdges="None" UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <AdornerDecorator>
                                <!-- 5, 24, 5, 5 -->
                                <ContentPresenter Margin="5, 24, 5, 5"/>
                            </AdornerDecorator>
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource SimpleButton}">
                                        <!--24-->
                                        <Setter Property="Width" Value="48"/>
                                        <!--14-->
                                        <Setter Property="Height" Value="25"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>
                                <TextBlock Margin="5,2,0,0" FontWeight="Bold" Foreground="{StaticResource Editor.FontColorBrush}"
                                           DockPanel.Dock="Left" Text="{TemplateBinding Title}"/>
                                <Button x:Name="buttonClose" Click="Close_OnButtonClick">
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M1,1.5L 8,8.5" Margin="0"/>
                                            <Path Data="M1,8.5L 8,1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="buttonRestore" Click="MaximizeRestore_OnButtonClick">
                                    <Button.Content>
                                        <Rectangle Stroke="{StaticResource Editor.FontColorBrush}" StrokeThickness="1"
                                                   Width="10" Height="8"/>
                                    </Button.Content>
                                </Button>

                                <Button x:Name="buttonMinimize" Click="Minimize_OnButtonClick">
                                    <Button.Content>
                                        <Rectangle Stroke="{StaticResource Editor.FontColorBrush}" StrokeThickness="1"
                                                   Width="10" Height="1" Margin="0,4,0,0"/>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LotusDialogStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Selected.BackgroundColorBrush}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush1}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                              GlassFrameThickness="0" CaptionHeight="20" NonClientFrameEdges="None" UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <AdornerDecorator>
                                <!-- 5, 24, 5, 5 -->
                                <ContentPresenter Margin="5, 24, 5, 5"/>
                            </AdornerDecorator>
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource SimpleButton}">
                                        <!--24-->
                                        <Setter Property="Width" Value="48"/>
                                        <!--14-->
                                        <Setter Property="Height" Value="25"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>
                                <TextBlock Margin="5,2,0,0" FontWeight="Bold" Foreground="{StaticResource Editor.FontColorBrush}"
                                           DockPanel.Dock="Left" Text="{TemplateBinding Title}"/>
                                <Button x:Name="buttonClose" Click="Close_OnButtonClick">
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M1,1.5L 8,8.5" Margin="0"/>
                                            <Path Data="M1,8.5L 8,1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- ListBoxItem -->
    <Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,2,0,2" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                        <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Editor.Window.GrayBrush4}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Editor.Selected.BackgroundColorBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource Editor.Selected.BackgroundColor}" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Editor.Window.GrayBrush4}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource Editor.Disabled.FontColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox -->

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush4}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource Editor.FontColorBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Editor.Window.GrayBrush2}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Editor.Window.GrayBrush4}"/>
                        </Trigger>
                        <Trigger Property="Selector.IsSelectionActive" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Editor.Selected.BackgroundColorBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Editor.Selected.BackgroundColorBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Tab controls -->
    <LinearGradientBrush x:Key="TabItem.Selected.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource Editor.Window.GrayColor6}" Offset="0.0"/>
        <GradientStop Color="{StaticResource Editor.Window.GrayColor4}" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItem.Selected.Border" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource Editor.Window.GrayColor5}" Offset="0.0"/>
        <GradientStop Color="{StaticResource Editor.Window.GrayColor3}" Offset="1.0"/>
    </LinearGradientBrush>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource Editor.Window.GrayColor6}" Offset="0.0"/>
        <GradientStop Color="{StaticResource Editor.Window.GrayColor4}" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItem.Static.Border" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource Editor.Window.GrayColor5}" Offset="0.0"/>
        <GradientStop Color="{StaticResource Editor.Window.GrayColor3}" Offset="1.0"/>
    </LinearGradientBrush>
    <!-- <SolidColorBrush x:Key="TabItem.Static.Border" Color="{StaticResource Editor.Window.GrayColor6}"/> -->
    <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{StaticResource Editor.Window.GrayColor4}" Offset="0.0"/>
        <GradientStop Color="{StaticResource Editor.Window.GrayColor6}" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="{StaticResource Editor.Selected.BackgroundColor}"/>
    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="{StaticResource Editor.Window.GrayColor4}"/>
    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="{StaticResource Editor.Window.GrayColor3}"/>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Foreground" Value="{StaticResource Editor.FontColorBrush}"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="6,2,6,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Margin="0">
                            <Border x:Name="innerBorder" Background="{StaticResource TabItem.Selected.Background}" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Margin="-1" Opacity="0"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,-2,0,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,0,-2,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="0,-2,-2,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type util:NumberBox}" x:Key="{x:Type util:NumberBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource Editor.FontColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type util:NumberBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Label, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <TextBlock Grid.Column="1" x:Name="PART_textBlock" Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Left">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="SizeWE"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBox Grid.Column="1" x:Name="PART_textBox" BorderThickness="0" Padding="0" Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=Explicit}"
                                 Foreground="{TemplateBinding Foreground}" Visibility="Collapsed" Style="{StaticResource TextBoxStyleRename}"
                                 HorizontalAlignment="Left" HorizontalContentAlignment="Left"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Visibility, ElementName=PART_textBox}" Value="Visible">
                            <Setter Property="Visibility" TargetName="PART_textBlock" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Background" TargetName="PART_textBlock" Value="{StaticResource Editor.Disabled.FontColorBrush}"/>
                            <Setter Property="ToolTip" TargetName="PART_textBlock" Value="Mixed values"/>
                            <Setter Property="MinWidth" TargetName="PART_textBlock" Value="20"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type util:VectorBox}" x:Key="{x:Type util:VectorBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush5}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type util:VectorBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type util:NumberBox}" BasedOn="{StaticResource {x:Type util:NumberBox}}">
                            <Setter Property="MinWidth" Value="50"/>
                            <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
                            <Setter Property="ToolTipService.BetweenShowDelay" Value="500"/>
                            <Setter Property="Multiplier" Value="{Binding Multiplier,RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="border" SnapsToDevicePixels="true" Margin="0,2,0,3"
                            Background="{TemplateBinding Background}" Padding="5,2"
                            BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="columnDefinition0"/>
                                <ColumnDefinition x:Name="columnDefinition1"/>
                                <ColumnDefinition x:Name="columnDefinition2"/>
                                <ColumnDefinition x:Name="columnDefinition3"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="rowDefinition0"/>
                                <RowDefinition x:Name="rowDefinition1"/>
                                <RowDefinition x:Name="rowDefinition2"/>
                                <RowDefinition x:Name="rowDefinition3"/>
                            </Grid.RowDefinitions>
                            <!-- #TODO Either get rid of labels or add toggleable labels for vector controls -->
                            <util:NumberBox x:Name="nbX" Foreground="{StaticResource Editor.RedBrush}" Label="X:"
                                            Value="{Binding X, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="X value"/>
                            <util:NumberBox x:Name="nbY" Foreground="{StaticResource Editor.GreenBrush}" Label="Y:"
                                            Value="{Binding Y, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Y value"/>
                            <util:NumberBox x:Name="nbZ" Foreground="{StaticResource Editor.BlueBrush}" Label="Z:"
                                            Value="{Binding Z, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Z value"/>
                            <util:NumberBox x:Name="nbW" Foreground="{StaticResource Editor.FontColorBrush}" Label="W:"
                                            Value="{Binding W, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="W value" Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical">
                            <Setter Property="Grid.Row" TargetName="nbX" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="nbY" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="nbZ" Value="2"/>
                            <Setter Property="Grid.Row" TargetName="nbW" Value="3"/>
                            <Setter Property="Width" TargetName="columnDefinition1" Value="auto"/>
                            <Setter Property="Width" TargetName="columnDefinition2" Value="auto"/>
                            <Setter Property="Width" TargetName="columnDefinition3" Value="auto"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal">
                            <Setter Property="Grid.Column" TargetName="nbX" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="nbY" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="nbZ" Value="2"/>
                            <Setter Property="Grid.Column" TargetName="nbW" Value="3"/>
                            <Setter Property="Height" TargetName="rowDefinition1" Value="auto"/>
                            <Setter Property="Height" TargetName="rowDefinition2" Value="auto"/>
                            <Setter Property="Height" TargetName="rowDefinition3" Value="auto"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="VEC2">
                            <Setter Property="Width" TargetName="columnDefinition2" Value="auto"/>
                            <Setter Property="Width" TargetName="columnDefinition3" Value="auto"/>
                            <Setter Property="Height" TargetName="rowDefinition2" Value="auto"/>
                            <Setter Property="Height" TargetName="rowDefinition3" Value="auto"/>
                            <Setter Property="Visibility" TargetName="nbZ" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="VEC3">
                            <Setter Property="Width" TargetName="columnDefinition3" Value="auto"/>
                            <Setter Property="Height" TargetName="rowDefinition3" Value="auto"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="VEC4">
                            <Setter Property="Visibility" TargetName="nbW" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Editor.Window.GrayBrush6}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>